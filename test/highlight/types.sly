type
// <- keyword

type Incomeplete
// <- keyword
//   ^ type.enum

type Incomplete =
// <- keyword
//   ^ type.enum
//              ^ operator

type Foo = String
// <- keyword
//   ^ type.enum
//       ^ operator
//         ^ type.enum

type Bar = { foo = Foo, bar = String }
//         ^ punctuation.bracket
//           ^ variable.other.member   
//                    ^ punctuation.delimiter
//                      ^ variable.other.member
//                          ^ operator
//                            ^ type.enum
//                                   ^ punctuation.bracket

type Baz = [ String ]
//         ^ punctuation.bracket
//           ^ type.enum
//                  ^ punctuation.bracket

type Mep = \Number -> String
//         ^ function
//          ^ type.enum
//                 ^ function
//                    ^ type.enum